[NoInterfaceObject]
interface publicKey {
  readonly attribute DOMString jwk; // JSON Web Key
  readonly attribute DOMString id;
  // The publicKey always implies a private key is bound to it behind the scenes
};

[NoInterfaceObject]
interface JOSEAPI {

  void getPublicKey(DOMString aJWKID);
  [TreatNonCallableAsNull] attribute Function? onGetKeypair;
  void createKeyPair(DOMString aJoseAlgID);
  [TreatNonCallableAsNull] attribute Function? onCreateKeypair;

  void encryptAndSign(ArrayBuffer aClearData, 
                      DOMString aRecipientJWK,
                      DOMString aSenderJWKID);

  [TreatNonCallableAsNull] attribute Function? onEncryptComplete;
  [TreatNonCallableAsNull] attribute Function? onEncryptError;

  // XXXddahl: JWE or JSMS??

  void verifyAndDecrypt(DOMString aReceivedJWE, 
                        DOMString aSenderJWK, 
                        DOMString aRecipientJWKID);

  [TreatNonCallableAsNull] attribute Function? onDecryptComplete;
  [TreatNonCallableAsNull] attribute Function? onDecryptError;

  void sign(aDOMString aClearData, DOMString aJWKID);

  [TreatNonCallableAsNull] attribute Function? onSignComplete;
  [TreatNonCallableAsNull] attribute Function? onSignError;

  void verify(DOMString aJWS, DOMString aDataToVerify, DOMString aJWK);

  [TreatNonCallableAsNull] attribute Function? onSignComplete;
  [TreatNonCallableAsNull] attribute Function? onSignError;

  void hash(DOMString aData);

  [TreatNonCallableAsNull] attribute Function? onHashComplete;
  [TreatNonCallableAsNull] attribute Function? onHashError;
};
